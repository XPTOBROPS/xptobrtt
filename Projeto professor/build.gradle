plugins {
    id 'java'
    id 'war'
    id 'jacoco'
    id 'org.springframework.boot' version '4.0.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.hibernate.orm' version '7.0.7.Final'
    id 'org.graalvm.buildtools.native' version '0.11.0'
}

group = 'br.unipe.vvauto'
version = '1.0.0'

compileJava.options.encoding = 'UTF-8'
bootRun.systemProperties['file.encoding'] = 'UTF-8'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
    targetCompatibility = JavaLanguageVersion.of(24)
    sourceCompatibility = JavaLanguageVersion.of(24)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.2'
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}

jacoco {
    toolVersion = "0.8.13"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
    finalizedBy jacocoTestReport
}
